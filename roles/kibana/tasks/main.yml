# install RabbitMQ by OS_family
- name: Install this role on {{ansible_os_family}}
  include: "{{ansible_os_family}}.yml"

# configure RabbitMQ

- name: Create kibana User
  user:
    name: kibana
    shell: /usr/sbin/nologin
    home: /data/wwwroot/kibana
    create_home: no

- name: Create kibana directory
  file:
    path: /data/wwwroot/kibana
    state: directory
    owner: kibana
    group: kibana
    
- name: Download kibana
  get_url:
    dest: /data/wwwroot/kibana
    url: "{{kibana_download_url}}"
    owner: kibana
    group: kibana

- name: Set kibana config
  template:
    src: kibana.conf.jinja2
    dest: /data/wwwroot/kibana/kibana.conf
    owner: kibana
    group: kibana

- name: Setting kibana service
  copy:
    src: kibana.service
    dest: /lib/systemd/system/kibana.service

- name: Restart kibana
  service:
    name: kibana.service
    state: restarted
    enabled: yes

- name: Create kibana System User
  user:
      name: kibana 
      create_home: no 
      home: /opt/kibana
      shell: /usr/sbin/nologin

- name: Download kibana
  unarchive:
      src: "{{kibana_download_url}}"
      dest: /opt/ 
      group: kibana 
      remote_src: yes
      owner: kibana
      mode: g+w

- name: Create the storage directory for files.
  file:
      path: /opt/kibana/data
      state: directory 
      owner: kibana 
      group: kibana
      mode: g+w
      
- name: Set database connection /opt/kibana/config/config.json
  lineinfile:
    dest: /opt/kibana/config/config.json
    regexp: '"DataSource":'
    line: '    "DataSource": "{{kibana_db_user}}:{{kibana_db_password}}@tcp(localhost:3306)/{{kibana_db_name}}?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s",'
    backrefs: yes 

# set soft link, -b cover the exist links
# ln -sb src des
- name: set soft link
  shell: |
    ln -sb /opt/kibana  /data/wwwroot/kibana
    ln -sb /opt/kibana/config /data/config/kibana

# Check version,
# must use sudo sh -c to solve the no-root permission
- block:
  - name: Check RabbitMQ Version
    shell: sudo sh -c "kibanactl status | grep 'RabbitMQ version' 1>> /data/logs/install_version.txt"

  - name: Check Erlang Version
    shell: sudo sh -c 'echo "Erlang $(yum info erlang | grep Version | sed -n 1p)" 1>> /data/logs/install_version.txt'
    when: ansible_os_family=="RedHat"

# check service state
- name: Check RabbitMQ Service
  shell: systemctl status kibana | grep Active*
  register: check_kibana_service
  notify: check_kibana_service
